{"version":3,"file":"media-queries-min.umd.js","sources":["../src/utils/index.js","../src/hooks/useMediaQuery.js","../src/components/MediaQuery/MediaQuery.js"],"sourcesContent":["import json2mq from 'json2mq'\n\nconst defaultBreakpoint = 'xs'\n\nconst breakpoints = {\n  xs: json2mq({ maxWidth: 576 }),\n  sm: json2mq({ minWidth: 576 }),\n  md: json2mq({ minWidth: 768 }),\n  lg: json2mq({ minWidth: 992 }),\n  xl: json2mq({ minWidth: 1200 })\n}\n\nconst defaultParams = {\n  size: defaultBreakpoint,\n  maxWidth: null,\n  minWidth: null\n}\n\nfunction parseData(value) {\n  if (typeof value === 'string') return { ...defaultParams, size: value }\n\n  if (!value) return defaultParams\n\n  return value\n}\n\nexport const convertToQuery = (query) => json2mq(query)\n\nexport const getBreakpoint = (size = defaultBreakpoint) => {\n  const brk = breakpoints[size]\n\n  if (!brk) return breakpoints[defaultBreakpoint]\n\n  return brk\n}\n\nexport const generateQuery = (value) => {\n  const { size, minWidth, maxWidth } = parseData(value)\n\n  if (maxWidth || minWidth) {\n    const newQuery = {}\n\n    if (maxWidth) newQuery.maxWidth = maxWidth\n\n    if (minWidth) newQuery.minWidth = minWidth\n\n    const result = convertToQuery(newQuery)\n\n    return result\n  }\n\n  return getBreakpoint(size)\n}\n","import { useEffect, useMemo, useState } from 'react'\nimport { generateQuery } from './../utils'\n\nfunction useMediaQuery(value) {\n  const media = useMemo(() => window.matchMedia(generateQuery(value)), [value])\n  const [matches, setMatches] = useState(media.matches)\n\n  useEffect(() => {\n    // Hamdler function which provide the result about match changes\n    function handleChange(query) {\n      setMatches(query.matches)\n    }\n\n    // Change when the size initialize the new breakpoint\n    handleChange(media)\n\n    // Trigger when the value changes on media query\n    media.addEventListener('change', handleChange)\n\n    // Remove the listener when the component is unmounted\n    return () => media.removeEventListener('change', handleChange)\n  }, [media, setMatches])\n\n  return { matches }\n}\n\nexport { useMediaQuery }\n","import { memo } from 'react'\nimport { useMediaQuery } from './../../hooks/useMediaQuery'\nimport PropTypes from 'prop-types'\n\nfunction MediaQueryComponent({ children, size, maxWidth, minWidth }) {\n  const value = useMediaQuery({ size, maxWidth, minWidth })\n\n  return <>{children(value)}</>\n}\n\nMediaQueryComponent.propTypes = {\n  maxWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  minWidth: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']).isRequired\n}\n\nMediaQueryComponent.defaultProps = {\n  size: 'xs'\n}\n\nconst MediaQuery = memo(MediaQueryComponent)\n\nexport { MediaQuery, useMediaQuery }\n"],"names":["breakpoints","xs","json2mq","maxWidth","sm","minWidth","md","lg","xl","defaultParams","size","useMediaQuery","value","media","useMemo","window","matchMedia","parseData","newQuery","getBreakpoint","generateQuery","useState","matches","setMatches","useEffect","handleChange","query","addEventListener","removeEventListener","MediaQueryComponent","children","propTypes","PropTypes","oneOfType","string","number","oneOf","isRequired","defaultProps","MediaQuery","memo"],"mappings":"opBAEA,IAEMA,EAAc,CAClBC,GAAIC,UAAQ,CAAEC,SAAU,MACxBC,GAAIF,UAAQ,CAAEG,SAAU,MACxBC,GAAIJ,UAAQ,CAAEG,SAAU,MACxBE,GAAIL,UAAQ,CAAEG,SAAU,MACxBG,GAAIN,UAAQ,CAAEG,SAAU,QAGpBI,EAAgB,CACpBC,KAXwB,KAYxBP,SAAU,KACVE,SAAU,MCZZ,SAASM,EAAcC,GACrB,IAAMC,EAAQC,UAAQ,kBAAMC,OAAOC,WDgCR,SAACJ,SAlB9B,SAAmBA,GACjB,MAAqB,iBAAVA,OAAgCH,GAAeC,KAAME,IAE3DA,GAAcH,EAgBkBQ,CAAUL,GAAvCF,IAAAA,KAAML,IAAAA,SAAUF,IAAAA,SAExB,GAAIA,GAAYE,EAAU,CACxB,IAAMa,EAAW,GAQjB,OANIf,IAAUe,EAASf,SAAWA,GAE9BE,IAAUa,EAASb,SAAWA,GAlBGH,UAoBPgB,GAKhC,OAvB2B,SAACR,GAG5B,gBAH4BA,IAAAA,EA1BJ,MA2BZV,EAAYU,IAEPV,EAAW,GAoBrBmB,CAAcT,GC/CyBU,CAAcR,KAAS,CAACA,MACxCS,WAASR,EAAMS,SAAtCA,OAASC,OAkBhB,OAhBAC,YAAU,WAER,SAASC,EAAaC,GACpBH,EAAWG,EAAMJ,SAUnB,OANAG,EAAaZ,GAGbA,EAAMc,iBAAiB,SAAUF,qBAGpBZ,EAAMe,oBAAoB,SAAUH,KAChD,CAACZ,EAAOU,IAEJ,CAAED,QAAAA,GCnBX,SAASO,SAAsBC,IAAAA,SACvBlB,EAAQD,EAAc,CAAED,OADSA,KACHP,WADSA,SACCE,WADSA,WAGvD,uBAAUyB,EAASlB,IAGrBiB,EAAoBE,UAAY,CAC9B5B,SAAU6B,UAAUC,UAAU,CAACD,UAAUE,OAAQF,UAAUG,SAC3D9B,SAAU2B,UAAUC,UAAU,CAACD,UAAUE,OAAQF,UAAUG,SAC3DzB,KAAMsB,UAAUI,MAAM,CAAC,KAAM,KAAM,KAAM,KAAM,OAAOC,YAGxDR,EAAoBS,aAAe,CACjC5B,KAAM,MAGF6B,IAAAA,EAAaC,OAAKX"}